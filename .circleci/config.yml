version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  ghpr: narrativescience/ghpr@1.1.2
  github-cli: circleci/github-cli@1.0.3

commands:
  configure-poetry:
    description: Configure Poetry
    steps:
      - run:
          name: Configure Poetry
          command: |
            pip install -U pip setuptools
            pip install poetry
            export CODEARTIFACT_AUTH_TOKEN="$(
              aws codeartifact get-authorization-token \
                --domain lexio \
                --domain-owner "$AWS_ACCOUNT_ID" \
                --query authorizationToken \
                --output text)"
            poetry config repositories.codeartifact "$CODEARTIFACT_URL"
            poetry config http-basic.codeartifact aws "$CODEARTIFACT_AUTH_TOKEN"
  release:
    steps:
      - github-cli/setup
      - run:
          name: Create GitHub Release
          command: |
            version="$(poetry version -s)"
            notes="$(git show -s --format=%B HEAD)"
            gh release create "v${version}" --title "Version ${version}" --notes "$notes"

jobs:
  test:
    docker:
      - image: cimg/python:3.6
    steps:
      - add_ssh_keys:
          fingerprints:
            - "cb:4c:e2:f4:c2:be:b7:c0:1a:02:1b:13:15:e0:a4:1b"
      - ghpr/build-prospective-branch
      - aws-cli/install
      - configure-poetry
      - run:
          name: Bump version
          command: .circleci/bump-version.sh "$GITHUB_PR_BASE_BRANCH" "$CIRCLE_BRANCH"
      - run: poetry install
      - run:
          name: Run commit hooks
          command: |
            poetry run pre-commit install
            poetry run pre-commit run \
              --source "origin/${GITHUB_PR_BASE_BRANCH}" \
              --origin "origin/${CIRCLE_BRANCH}" \
              --show-diff-on-failure
      - run: poetry build
      - run: poetry run pytest --junit-xml .junit/unit/results.xml
      - store_test_results:
          path: .junit
      - ghpr/post-pr-comment:
          comment: Tests failed!
          when: on_fail
  publish:
    docker:
      - image: cimg/python:3.6
    steps:
      - aws-cli/install
      - checkout
      - configure-poetry
      - run: poetry install
      - run: poetry build
      - run: poetry publish -r codeartifact
      - release

workflows:
  pull_request:
    jobs:
      - test:
          context: lexio-package
          filters:
            branches:
              ignore:
                - main
  publish:
    jobs:
      - publish:
          context: lexio-package
          filters:
            branches:
              only: main
